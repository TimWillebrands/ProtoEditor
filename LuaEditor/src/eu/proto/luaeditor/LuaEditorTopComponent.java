/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package eu.proto.luaeditor;

import java.awt.Font;
import java.awt.FontFormatException;
import java.io.File;
import java.io.IOException;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

import eu.proto.libs.Script;

import jsyntaxpane.syntaxkits.LuaSyntaxKit;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//eu.proto.luaeditor//LuaEditor//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "LuaEditorTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "eu.proto.luaeditor.LuaEditorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_LuaEditorAction")
@Messages({
    "CTL_LuaEditorAction=LuaEditor",
    "CTL_LuaEditorTopComponent=LuaEditor Window",
    "HINT_LuaEditorTopComponent=This is a LuaEditor window"
})
public final class LuaEditorTopComponent extends TopComponent {
    
    private static Font defaultFont;
    
    static{
        try {
            defaultFont = Font.createFont(Font.TRUETYPE_FONT,new File("./Inconsolata.otf")).deriveFont(16f);
        } catch (FontFormatException | IOException ex) {
            defaultFont = new Font(Font.MONOSPACED, Font.PLAIN, 12);
        }
    }

    public LuaEditorTopComponent(Script script) {
        this();
        codeEditor.setText(script.getContent());
        this.setDisplayName(script.getName());
    }
    
    public LuaEditorTopComponent(){
        initComponents();
        setName(Bundle.CTL_LuaEditorTopComponent());
        setToolTipText(Bundle.HINT_LuaEditorTopComponent());
        
        LuaSyntaxKit.initKit();
        codeEditor.setContentType("text/lua");
        codeEditor.setFont(defaultFont);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPane = new javax.swing.JScrollPane();
        codeEditor = new javax.swing.JEditorPane();

        scrollPane.setViewportView(codeEditor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane codeEditor;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
